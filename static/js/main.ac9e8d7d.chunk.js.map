{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","goods","handleSelect","good","setState","handleClearAll","handleClear","filter","item","this","className","length","map","type","onClick","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,OAChBC,MAAOJ,G,EAGTK,aAAe,SAACC,GACd,EAAKC,UAAS,gBAAGJ,EAAH,EAAGA,cAAH,MAAwB,CACpCA,cAAc,GAAD,mBAAMA,GAAN,CAAqBG,S,EAItCE,eAAiB,WACf,EAAKD,SAAS,CAAEJ,cAAe,M,EAGjCM,YAAc,SAACH,GACb,EAAKC,UAAS,kBAAwB,CACpCJ,cADY,EAAGA,cACcO,QAAO,SAAAC,GAAI,OACtCA,IAASL,U,4CAIf,WAAU,IAAD,OACCF,EAAUQ,KAAKV,MAAfE,MAER,OACE,sBAAKS,UAAU,MAAf,UACGD,KAAKV,MAAMC,cAAcW,OAAS,EACjC,qBAAID,UAAU,cAAd,UACGD,KAAKV,MAAMC,cAAcY,KAAI,SAAAT,GAAI,OAChC,uBAAiBO,UAAU,mBAA3B,UACGP,EACD,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKR,YAAYH,IAEnBO,UAAU,qBALZ,iBAFSP,MAaZ,IAfH,iBAmBA,oBAAIO,UAAU,cAAd,+BAGDD,KAAKV,MAAMC,cAAcW,OAAS,GACjC,qBAAKD,UAAU,cAAf,SACE,wBACEG,KAAK,SACLC,QAASL,KAAKJ,eACdK,UAAU,yBAHZ,yBAUJ,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,cAAd,SACGT,EAAMW,KAAI,SAAAT,GAAI,OACb,qBAAeO,UAAU,mBAAzB,UACE,mBAAGA,UAAU,wBAAb,SACGP,KAED,EAAKJ,MAAMC,cAAce,SAASZ,IAClC,wBACEU,KAAK,SACLC,QAAS,WACP,EAAKZ,aAAaC,IAEpBO,UAAU,qBALZ,sBALKP,iB,GAlELa,IAAMC,WA0FTnB,IC5GfoB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac9e8d7d.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n  goods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n    goods: goodsFromServer,\n  };\n\n  handleSelect = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: [...selectedGoods, good],\n    }));\n  };\n\n  handleClearAll = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  handleClear = (good: string) => {\n    this.setState(({ selectedGoods }) => ({\n      selectedGoods: selectedGoods.filter(item => (\n        item !== good)),\n    }));\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <div className=\"App\">\n        {this.state.selectedGoods.length > 0 ? (\n          <h1 className=\"page__title\">\n            {this.state.selectedGoods.map(good => (\n              <span key={good} className=\"page__title-item\">\n                {good}\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    this.handleClear(good);\n                  }}\n                  className=\"page-button__clear\"\n                >\n                  X\n                </button>\n              </span>\n            ))}\n            {' '}\n            is selected\n          </h1>\n        ) : (\n          <h1 className=\"page__title\">No goods selected</h1>\n        )}\n\n        {this.state.selectedGoods.length > 1 && (\n          <div className=\"page-button\">\n            <button\n              type=\"button\"\n              onClick={this.handleClearAll}\n              className=\"page-button__clear-all\"\n            >\n              Clear All\n            </button>\n          </div>\n        )}\n\n        <div className=\"goods\">\n          <ul className=\"goods__list\">\n            {goods.map(good => (\n              <li key={good} className=\"goods__list-item\">\n                <p className=\"goods__list-item-text\">\n                  {good}\n                </p>\n                {!this.state.selectedGoods.includes(good) && (\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      this.handleSelect(good);\n                    }}\n                    className=\"goods__list-button\"\n                  >\n                    Select\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}